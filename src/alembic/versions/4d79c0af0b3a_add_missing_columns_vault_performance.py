"""add missing columns vault_performance

Revision ID: 4d79c0af0b3a
Revises: 03b933b5766c
Create Date: 2025-01-16 17:25:37.766955

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4d79c0af0b3a'
down_revision: Union[str, None] = '03b933b5766c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.add_column('vault_performance', sa.Column('base_15d_apy', sa.Float(), nullable=True))
    op.add_column('vault_performance', sa.Column('base_45d_apy', sa.Float(), nullable=True))
    op.alter_column('vault_performance', 'datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column('vault_performance_history', 'datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('vault_performance_history', 'datetime',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('vault_performance', 'datetime',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.drop_column('vault_performance', 'base_45d_apy')
    op.drop_column('vault_performance', 'base_15d_apy')
    
    # ### end Alembic commands ###
