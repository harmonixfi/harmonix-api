"""add_table_staking

Revision ID: d33df0dca6e7
Revises: dd82a7ec803e
Create Date: 2025-02-08 14:19:29.558727

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "d33df0dca6e7"
down_revision: Union[str, None] = "dd82a7ec803e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "staking_validators",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("slug_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_stakings",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("validator_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("wallet_address", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("total_staked", sa.Float(), nullable=True),
        sa.Column("total_unstaked", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_stakings_created_at"),
        "user_stakings",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_stakings_updated_at"),
        "user_stakings",
        ["updated_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_stakings_updated_at"), table_name="user_stakings")
    op.drop_index(op.f("ix_user_stakings_created_at"), table_name="user_stakings")
    op.drop_table("user_stakings")
    op.drop_table("staking_validators")
    # ### end Alembic commands ###
